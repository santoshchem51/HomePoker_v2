name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript type checking
      run: npm run typecheck
      
    - name: Run ESLint
      run: npm run lint:ci
      
    - name: Run tests
      run: npm run test:ci-safe
      
    - name: Check dependencies
      run: npm run deps:check
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false
        
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build Android Debug APK
      run: |
        cd android
        chmod +x ./gradlew
        ./gradlew clean
        ./gradlew assembleDebug --no-daemon --max-workers=2 --no-parallel
      env:
        GRADLE_OPTS: "-Xmx3072m -XX:MaxMetaspaceSize=768m"
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 7
        
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install CocoaPods
      run: |
        cd ios
        # Clean pods to ensure fresh installation
        rm -rf Pods Podfile.lock || true
        pod install --repo-update
      env:
        NO_FLIPPER: 1  # Disable Flipper for CI builds (faster)
        
    - name: Build iOS Debug (Simulator)
      run: |
        cd ios
        xcodebuild -workspace PokePot.xcworkspace \
          -scheme PokePot \
          -configuration Debug \
          -destination 'platform=iOS Simulator,name=iPhone 14,OS=17.0' \
          -derivedDataPath build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          build
      env:
        RCT_NEW_ARCH_ENABLED: 0  # Disable new architecture for stability
        
    - name: Build iOS Release Archive (for IPA)
      run: |
        cd ios
        xcodebuild archive \
          -workspace PokePot.xcworkspace \
          -scheme PokePot \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath build/PokePot.xcarchive \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          PROVISIONING_PROFILE="" \
          DEVELOPMENT_TEAM="" \
          CODE_SIGN_STYLE=Manual \
          PRODUCT_BUNDLE_IDENTIFIER="com.pokepot.unsigned" \
          -allowProvisioningUpdates
      env:
        RCT_NEW_ARCH_ENABLED: 0
        
    - name: Export Unsigned IPA
      run: |
        cd ios
        # Create export options plist for unsigned IPA
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>debugging</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <false/>
            <key>compileBitcode</key>
            <false/>
            <key>signingCertificate</key>
            <string>-</string>
            <key>provisioningProfiles</key>
            <dict/>
        </dict>
        </plist>
        EOF
        
        # Export archive to IPA (fallback to manual export if automated fails)
        if ! xcodebuild -exportArchive \
          -archivePath build/PokePot.xcarchive \
          -exportPath build/ipa \
          -exportOptionsPlist ExportOptions.plist \
          -allowProvisioningUpdates; then
          
          echo "Automated export failed, creating manual unsigned IPA..."
          mkdir -p build/ipa
          
          # Extract .app from archive
          cp -r build/PokePot.xcarchive/Products/Applications/PokePot.app build/ipa/
          
          # Create Payload directory structure for IPA
          mkdir -p build/ipa/Payload
          mv build/ipa/PokePot.app build/ipa/Payload/
          
          # Create unsigned IPA
          cd build/ipa
          zip -r PokePot-unsigned.ipa Payload/
          cd ../..
          
          echo "âœ… Manual unsigned IPA created: build/ipa/PokePot-unsigned.ipa"
        fi
          
    - name: Upload Unsigned IPA Artifact
      uses: actions/upload-artifact@v4
      with:
        name: PokePot-iOS-Unsigned-IPA
        path: |
          ios/build/ipa/*.ipa
          ios/build/PokePot.xcarchive
        retention-days: 30
        
    - name: Upload iOS Build Logs (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-logs-ci
        path: |
          ios/build/Logs/
          ios/DerivedData/*/Logs/
        retention-days: 7
          
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
        
  performance:
    name: Performance Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check bundle size
      run: |
        npx react-native bundle \
          --platform android \
          --dev false \
          --entry-file index.js \
          --bundle-output bundle-size-check.js \
          --reset-cache
        
        BUNDLE_SIZE=$(wc -c < bundle-size-check.js)
        echo "Bundle size: $BUNDLE_SIZE bytes"
        
        # Fail if bundle exceeds 50MB (story requirement)
        MAX_SIZE=52428800  # 50MB in bytes
        if [ $BUNDLE_SIZE -gt $MAX_SIZE ]; then
          echo "Bundle size exceeds 50MB limit"
          exit 1
        fi
        
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test, build-android, build-ios]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          Automated release from CI/CD pipeline
          
          Changes in this release:
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false